{"version":3,"sources":["container/Auth.js","components/ToDoItem.js","components/ToDosList.js","components/ToDoInput.js","components/Filter.js","components/Pagination.js","container/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Auth","instanceTodo","setIsLogined","useState","username","password","form","setForm","signup","setSignup","errorAlert","setErrorAlert","errorStatus","setErrorStatus","errorMessage","setErrorMessage","changeHandler","event","target","name","value","errCatch","err","response","data","message","status","handleClose","handleSignup","a","post","handleLogin","res","token","localStorage","setItem","Container","maxWidth","Typography","variant","align","Grid","style","float","Button","color","onClick","margin","onSubmit","preventDefault","TextField","fullWidth","placeholder","id","type","onChange","autoComplete","container","spacing","justify","padding","Snackbar","open","autoHideDuration","onClose","Alert","severity","ToDoItem","todo","handleTodoEdit","handleDelete","date","createdAt","toggleEdit","setToggleEdit","inputValue","setInputValue","done","ListItem","Checkbox","checked","uuid","handleDone","autoFocus","e","onKeyDown","key","trim","handleKeyPress","onBlur","ListItemText","overflowWrap","primary","textAlign","secondary","IconButton","Delete","ToDosList","toDos","List","map","ToDoInput","handleSubmit","Filter","setPage","sortByDate","sortByDone","setSortByDone","setSortByDate","item","ButtonGroup","Pagination","pagesCount","page","pageNumbers","i","Math","ceil","push","number","Todos","setToDos","limit","setLimit","isLoaded","setIsLoaded","setPagesCount","getTodos","useCallback","getItem","defaults","headers","common","get","params","getData","Tasks","removeItem","useEffect","delete","patch","marginTop","totalTodos","length","alignItems","direction","CircularProgress","App","axios","create","baseURL","isLogined","checkToken","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5f19f56.chunk.js","sourcesContent":["import { Snackbar, Grid, Container, TextField, Typography, Button } from '@material-ui/core/';\nimport React, {useState} from 'react'\nimport {Alert} from '@material-ui/lab'\n\nexport function Auth({instanceTodo, setIsLogined }) {\n  const [form, setForm] = useState({username: '', password:''})\n  const [signup, setSignup] = useState(false)\n  const [errorAlert, setErrorAlert] = useState(false);\n  const [errorStatus, setErrorStatus] = useState();\n  const [errorMessage, setErrorMessage] = useState('');\n  const changeHandler = event => {\n    setForm({...form, [event.target.name]: event.target.value })\n  }\n\n  const errCatch = (err) => {\n    setErrorMessage(err.response.data.message);\n    setErrorStatus(err.response.status);\n    setErrorAlert(true)\n  }\n\n  const handleClose = () => {\n    setErrorAlert(false);\n  }\n\n  const handleSignup = async (form) => {\n    try {\n      await instanceTodo.post(`/signup`, form)\n      handleLogin(form)\n    } catch(err) {\n      errCatch(err);\n    }\n  }\n\n  const handleLogin = async (form) => {\n    try {\n      const res = await instanceTodo.post(`/login`, form)\n      const token = res.data.token;\n      localStorage.setItem('token', token);\n      if(token) {\n        setIsLogined(true)\n      }\n    } catch(err) {\n      errCatch(err);\n    }\n  }\n\n\n  const handleAuthChange = event => {\n    setSignup(!signup)\n  }\n\n  return (\n    <Container maxWidth=\"sm\" >\n      <Typography variant='h2' align='center'>ToDo</Typography>\n      <Grid>\n        <Grid >\n          <Typography variant='h3' align='center'\n          style={{ float: 'left'}}>Authorization</Typography>\n          <Button variant=\"contained\"\n            color={'default'}\n            onClick={handleAuthChange}\n            style={{margin: 10, float: 'right'}}>\n              {signup ? 'Login' : 'Signup'}\n          </Button>\n        </Grid>\n        <form onSubmit = {event => {\n          event.preventDefault()\n          !signup ? handleLogin(form) : handleSignup(form)\n          setForm('')}}>\n          <TextField\n            fullWidth\n            variant='outlined'\n            margin='normal'\n            placeholder='Enter your User name'\n            id='user name'\n            type='text'\n            name='username'\n            onChange={changeHandler}\n            value={form.username}\n          />\n          <TextField\n            fullWidth\n            variant='outlined'\n            margin='normal'\n            placeholder='Enter your password'\n            id='password'\n            type='password'\n            name='password'\n            autoComplete='on'\n            onChange={changeHandler}\n            value={form.password}\n          />\n          <Grid container spacing={4} justify=\"center\" style={{padding: 10}}>\n            {!signup\n              ? <Button variant=\"contained\"\n                  color={'primary'}\n                  style={{margin: 10}}\n                  onClick={event => handleLogin(form)}>\n                    Login\n                </Button>\n              : <Button variant=\"contained\"\n                  color={'secondary'}\n                  style={{margin: 10}}\n                  onClick={event => handleSignup(form)}>\n                    Signup\n                </Button>\n            }\n          </Grid>\n        </form>\n      </Grid>\n      <Snackbar open={errorAlert} autoHideDuration={3000} onClose={handleClose}>\n        <Alert severity=\"error\" onClose={handleClose}>\n           Status: {errorStatus}  {errorMessage}\n        </Alert>\n      </Snackbar>\n    </Container>\n  )\n}\n","import { ListItem, ListItemText, Checkbox, IconButton, TextField } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport React, { useState } from 'react';\n\nexport function ToDoItem({todo, handleTodoEdit, handleDelete }) {\n    const date = todo.createdAt;\n    const [toggleEdit, setToggleEdit] = useState(false);\n    const [inputValue, setInputValue] = useState(todo.name);\n    const [done] = useState(todo.done)\n\n    const handleKeyPress = (e, uuid) => {\n        if(e.key === 'Enter') {\n            e.preventDefault();\n            if(inputValue.trim() !== '') {\n                handleTodoEdit(uuid, inputValue, done);\n                setToggleEdit(false);\n            };\n        };\n        if (e.key === 'Escape') {\n            setToggleEdit(false);\n            setInputValue(todo.name);\n        };\n    };\n\n    const handleClick = () => {\n        setToggleEdit(false);\n        setInputValue(todo.name);\n    }\n\n    const handleDone = (todo) => {\n        handleTodoEdit(todo.uuid, inputValue, !todo.done )\n    }\n    return(\n        <ListItem >\n            <Checkbox checked={todo.done} \n            value={todo.uuid}\n            color='primary'\n            onClick={() => handleDone(todo)} />\n            {toggleEdit\n                ? <TextField \n                    fullWidth\n                    variant='outlined'\n                    autoFocus={true}\n                    value={inputValue}\n                    onChange={e => setInputValue(e.target.value)}\n                    onKeyDown={e => handleKeyPress(e, todo.uuid)} \n                    onBlur={handleClick}\n                  />\n                : <ListItemText \n                    style={{overflowWrap: 'break-word'}}\n                    primary={todo.name}\n                    onClick={() => setToggleEdit(true)}\n                  />}           \n            <ListItemText \n            style={{ textAlign: 'right'}}\n            secondary={date}\n            />\n            <IconButton onClick={() => handleDelete(todo.uuid)}>\n                <Delete />\n            </IconButton>\n        </ListItem>\n    )\n};","import React from 'react';\nimport {List} from '@material-ui/core/'\nimport { ToDoItem } from './ToDoItem';\n\nexport function ToDosList({ toDos, handleTodoEdit, handleDelete, handleDone}) {\n    return(\n        <List >\n            {toDos.map((todo) => (\n                <ToDoItem \n                    key={todo.uuid}\n                    todo={todo}\n                    handleDelete={handleDelete}\n                    handleTodoEdit={handleTodoEdit}\n                />\n            ))}\n        </List>\n    )\n};","import { TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nfunction ToDoInput({handleSubmit}) {\n    const [inputValue, setInputValue] = useState('');\n    const handleChange = ({target}) => {\n         setInputValue(target.value)\n       };\n    return (\n        <form onSubmit = {event => {\n            event.preventDefault()\n            handleSubmit(inputValue)\n            setInputValue('')\n        }}>\n                <TextField\n                fullWidth\n                variant='outlined'\n                margin='normal'\n                onChange={handleChange} \n                value={inputValue}/> \n         </form>\n    );\n}\n\nexport default ToDoInput;","import { Grid, Button, ButtonGroup} from '@material-ui/core/';\n\nexport function Filter({ setPage, sortByDate, sortByDone, setSortByDone, setSortByDate }) {\n\n    const handleChange = () => {\n      setPage(1);\n    };\n\n    const handleSortLater = () => {\n        if(sortByDate !== 'desc') {\n          setSortByDate('desc');\n        };\n    };\n    \n    const handleSortEarlier = () => {\n        if(sortByDate !== 'asc') {\n          setSortByDate('asc');\n        };\n    };\n\n    const handleAll = () => {\n      if(sortByDone !== '') {\n        setSortByDone('');\n      };\n    };\n  \n    const handleDone = () => {\n      if(sortByDone !== 'done') {\n        setSortByDone('done');\n      };\n    };\n  \n    const handleUndone = () => {\n      if(sortByDone !== 'undone') {\n        setSortByDone('undone');\n      };\n    };\n    \n    return (\n        <Grid container spacing={4} justify=\"space-between\"  >\n          <Grid item onClick={handleChange}>\n            <ButtonGroup >\n              <Button onClick={handleAll}\n              color={(sortByDone === '') ? 'primary' : 'default'}\n              variant={(sortByDone === '') ? 'contained' : 'outlined'}\n              >All</Button>\n              <Button onClick={handleDone}\n              color={(sortByDone === 'done') ? 'primary' : 'default'}\n              variant={(sortByDone === 'done') ? 'contained' : 'outlined'}\n              >Done</Button>\n              <Button onClick={handleUndone}\n              color={(sortByDone === 'undone') ? 'primary' : 'default'}\n              variant={(sortByDone === 'undone') ? 'contained' : 'outlined'}\n              >Undone</Button>\n            </ButtonGroup>\n          </Grid>\n          <Grid item >\n            <ButtonGroup>\n              <Button onClick={handleSortLater}\n              color={(sortByDate === 'desc') ? 'primary' : 'default'}\n              variant={(sortByDate === 'desc') ? 'contained' : 'outlined'}\n              >Later</Button>\n              <Button onClick={handleSortEarlier}\n              color={(sortByDate === 'asc') ? 'primary' : 'default'}\n              variant={(sortByDate === 'asc') ? 'contained' : 'outlined'}\n              >Earlier</Button>\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n    )\n};","import { Grid, Button, ButtonGroup} from '@material-ui/core/';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport function Pagination({ pagesCount, setPage, page }) {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(pagesCount); i++) {\n        pageNumbers.push(i);\n      }\n      \n    const paginate = pageNumber => setPage(pageNumber);\n\n    return (\n        <Grid container spacing={4} justify=\"center\" style={{padding: 10}}>\n            <Button variant=\"contained\"\n                color={'default'}\n                onClick={() => setPage(1)}>\n                <NavigateBeforeIcon />\n                <NavigateBeforeIcon />\n            </Button>\n            <ButtonGroup>\n                {pageNumbers.map(number => (\n                    <Button key={number}\n                    color={(number === page) ? 'primary' : 'default'}\n                    variant={(number === page) ? 'contained' : 'outlined'}\n                    onClick={() => paginate(number)}\n                    >{number}</Button>\n                ))}\n            </ButtonGroup>\n            <Button variant=\"contained\"\n                color={'default'}\n                onClick={() => setPage(pagesCount)}>\n                <NavigateNextIcon  />\n                <NavigateNextIcon  />\n            </Button>\n        </Grid>\n    )\n};","import {CircularProgress, Container, Grid, Typography, Snackbar, Button } from '@material-ui/core/';\nimport { ToDosList } from '../components/ToDosList';\nimport ToDoInput from '../components/ToDoInput';\nimport { Filter } from '../components/Filter';\nimport { Pagination } from '../components/Pagination';\nimport { useCallback, useEffect, useState } from 'react';\nimport {Alert} from '@material-ui/lab'\n\n\nexport function Todos({instanceTodo, setIsLogined}) {\n\n  const [toDos, setToDos] = useState([]);\n  const [sortByDone, setSortByDone] = useState(''); \n  const [sortByDate, setSortByDate] = useState('desc');\n  const [page, setPage] = useState(1);\n  const [limit, setLimit ] = useState(5);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [errorAlert, setErrorAlert] = useState(false);\n  const [errorStatus, setErrorStatus] = useState();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [pagesCount, setPagesCount] = useState('')\n\n  const errCatch = (err) => {\n    setErrorMessage(err.response.data.message);\n    setErrorStatus(err.response.status);\n    setErrorAlert(true)\n  }\n  \n  const getTodos = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      instanceTodo.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const getData = await instanceTodo.get('/tasks', {\n        params: {\n          sortByDone: sortByDone,\n          sortByDate: sortByDate,\n          page: page,\n          limit: limit  \n        }\n      });\n      setToDos(getData.data.Tasks);\n      setLimit(getData.data.limit);\n      setPagesCount(getData.data.pagesCount)\n      setIsLoaded(true);\n      \n    } catch (err) {\n      errCatch(err);\n      const message = err.response.data.message\n      if(message === 'Invalid token') {\n        localStorage.removeItem('token')\n        setIsLogined(false)\n      }\n    }\n  }, [sortByDone, sortByDate, page]) // eslint-disable-line\n\n  useEffect(() => {\n    getTodos()\n  }, [getTodos])\n  \n  const handleSubmit = async (inputValue) => {\n    try {\n      if(inputValue.trim() !== '') {\n        await instanceTodo.post(`/task`,\n          {\n            'name': inputValue,\n            'done': false\n          });\n        await getTodos();\n      }\n    } catch (err) {\n      errCatch(err);\n    }\n  };\n\n  const handleDelete = async (uuid) => {\n    try {\n      await instanceTodo.delete(`/task/${uuid}`);\n      await getTodos();\n    } catch (err) {\n      errCatch(err);\n    }\n  }\n\n  const handleTodoEdit = async (uuid, inputValue, done) => {\n    try {\n      await instanceTodo.patch(`/task/${uuid}`,\n        {\n          'name': inputValue,\n          'done': done\n        });\n      await getTodos();\n    } catch (err) {\n      errCatch(err);\n    }\n  };\n\n  const handleClose = () => {\n    setErrorAlert(false);\n  }\n\n  const handleLogout = (event) => {\n    setIsLogined(false);\n  }\n\n\n  return (\n    <Container maxWidth=\"sm\" >\n      <Grid>\n        <Typography variant='h2' align='center'\n        style={{ float: 'left'}}>ToDo</Typography>\n        <Button\n        variant=\"contained\"\n        color={'secondary'}\n        style={{ marginTop: 20, float: 'right'}}\n        onClick={handleLogout}>\n          Logout\n        </Button>\n      </Grid>\n      <ToDoInput handleSubmit={handleSubmit} />\n      <Filter \n        sortByDone={sortByDone}\n        setSortByDone={setSortByDone}\n        sortByDate={sortByDate}\n        setSortByDate={setSortByDate}\n        setPage={setPage}\n      />\n      {(pagesCount > 1 && isLoaded) &&\n        <Pagination \n          pagesCount={pagesCount}\n          totalTodos={toDos.length}\n          page={page}\n          setPage={setPage}\n        />\n      }\n      {isLoaded &&\n        <ToDosList align='center' \n          handleDelete={handleDelete}\n          toDos={toDos}\n          handleTodoEdit={handleTodoEdit}\n        />\n      }\n      {!isLoaded && \n        <Grid container alignItems='center' direction='column'>\n          <Grid item><CircularProgress/></Grid>\n        </Grid>\n      }\n      <Snackbar open={errorAlert} autoHideDuration={3000} onClose={handleClose}>\n         <Alert severity=\"error\" onClose={handleClose}>\n           Status: {errorStatus}  {errorMessage}\n         </Alert>\n      </Snackbar>\n    </Container>\n  );\n};","import { Container } from '@material-ui/core/';\nimport './App.css';\nimport { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Auth } from './container/Auth'\nimport { Todos } from './container/Todos'\n\nfunction App() {\n  const instanceTodo = axios.create({\n    baseURL: \"https://todos-mvp.herokuapp.com/\"\n})\n  const [isLogined, setIsLogined] = useState(false)\n  const checkToken = useCallback(() =>{\n    if(localStorage.token) setIsLogined(true)\n  },[])\n\n  useEffect(() => {\n    checkToken()\n  }, [checkToken])\n\n  return (\n    <Container maxWidth=\"sm\" >\n      {isLogined\n        ? <Todos \n          instanceTodo={instanceTodo}\n          setIsLogined={setIsLogined}/>\n        : <Auth\n          setIsLogined={setIsLogined}\n          instanceTodo={instanceTodo}/>\n      }\n    </Container>\n  );\n};\n// log\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}